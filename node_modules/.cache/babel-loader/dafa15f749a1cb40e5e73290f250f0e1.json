{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nvar isArrayOfObjects = function isArrayOfObjects(options) {\n  return typeof options[0] === 'object';\n};\nvar defaultGetOptionValue = function defaultGetOptionValue(value) {\n  return isObject(value) ? value.value : value;\n};\nvar defaultGetOptionLabel = function defaultGetOptionLabel(value) {\n  return isObject(value) ? value.label : String(value);\n};\nexport var GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter: function valueFormatter(params) {\n    var id = params.id,\n      field = params.field,\n      value = params.value,\n      api = params.api;\n    var colDef = params.api.getColumn(field);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    var valueOptions;\n    if (typeof colDef.valueOptions === 'function') {\n      valueOptions = colDef.valueOptions({\n        id: id,\n        row: id ? api.getRow(id) : null,\n        field: field\n      });\n    } else {\n      valueOptions = colDef.valueOptions;\n    }\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    var valueOption = valueOptions.find(function (option) {\n      return colDef.getOptionValue(option) === value;\n    });\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators()\n});","map":null,"metadata":{},"sourceType":"module"}
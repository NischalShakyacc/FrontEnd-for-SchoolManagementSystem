{"ast":null,"code":"import _toConsumableArray from \"E:\\\\School Web Application\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\School Web Application\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nvar useGridColumnMenuSlots = function useGridColumnMenuSlots(props) {\n  var apiRef = useGridPrivateApiContext();\n  var defaultSlots = props.defaultSlots,\n    defaultSlotProps = props.defaultSlotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    hideMenu = props.hideMenu,\n    colDef = props.colDef,\n    _props$addDividers = props.addDividers,\n    addDividers = _props$addDividers === void 0 ? true : _props$addDividers;\n  var processedComponents = React.useMemo(function () {\n    return _extends({}, defaultSlots, slots);\n  }, [defaultSlots, slots]);\n  var processedSlotProps = React.useMemo(function () {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    var mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        currentSlotProps = _ref2[1];\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  var defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  var userItems = React.useMemo(function () {\n    var defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(function (key) {\n      return !defaultComponentKeys.includes(key);\n    });\n  }, [slots, defaultSlots]);\n  return React.useMemo(function () {\n    var uniqueItems = Array.from(new Set([].concat(_toConsumableArray(defaultItems), _toConsumableArray(userItems))));\n    var cleansedItems = uniqueItems.filter(function (key) {\n      return processedComponents[key] != null;\n    });\n    var sorted = cleansedItems.sort(function (a, b) {\n      var leftItemProps = processedSlotProps[a];\n      var rightItemProps = processedSlotProps[b];\n      var leftDisplayOrder = Number.isFinite(leftItemProps == null ? void 0 : leftItemProps.displayOrder) ? leftItemProps.displayOrder : 100;\n      var rightDisplayOrder = Number.isFinite(rightItemProps == null ? void 0 : rightItemProps.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce(function (acc, key, index) {\n      var itemProps = {\n        colDef: colDef,\n        onClick: hideMenu\n      };\n      var processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        var customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [].concat(_toConsumableArray(acc), [[processedComponents[key], itemProps], [Divider, {}]]) : [].concat(_toConsumableArray(acc), [[processedComponents[key], itemProps]]);\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","map":null,"metadata":{},"sourceType":"module"}
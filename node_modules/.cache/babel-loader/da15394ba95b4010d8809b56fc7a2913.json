{"ast":null,"code":"import _slicedToArray from \"E:\\\\School Web Application\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\School Web Application\\\\FrontEnd\\\\src\\\\Routes\\\\Admin\\\\GroupAccount.js\";\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nexport default function GroupAccount() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    accounts = _useState2[0],\n    setAccounts = _useState2[1];\n  var readExcel = function readExcel(file) {\n    var promise = new Promise(function (resolve, reject) {\n      var fileReader = new FileReader(file);\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = function (e) {\n        var bufferArray = e.target.result;\n        var wb = XLSX.read(bufferArray, {\n          type: 'buffer'\n        });\n        var wsname = wb.SheetNames[0];\n        var ws = wb.Sheets[wsname];\n        var data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = function (error) {\n        reject(error);\n      };\n    });\n    promise.then(function (data) {\n      setAccounts(data);\n      console.log(data);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"innerHero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: function onChange(e) {\n      var file = e.target.files[0];\n      readExcel(file);\n    },\n    accept: \".xlsx, .xls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["React","XLSX","GroupAccount","_useState","useState","_useState2","_slicedToArray","accounts","setAccounts","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","console","log","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","files","accept"],"sources":["E:/School Web Application/FrontEnd/src/Routes/Admin/GroupAccount.js"],"sourcesContent":["import React from 'react'\r\nimport * as XLSX from 'xlsx'\r\n\r\nexport default function GroupAccount() {\r\n    const [accounts, setAccounts] = useState([])\r\n\r\n    const readExcel = (file)=>{\r\n        \r\n        const promise = new Promise((resolve, reject)=>{\r\n            const fileReader = new FileReader(file);\r\n            fileReader.readAsArrayBuffer(file)\r\n\r\n            fileReader.onload = (e)=>{\r\n                const bufferArray = e.target.result;\r\n\r\n                const wb = XLSX.read(bufferArray,{type:'buffer'});\r\n\r\n                const wsname = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wsname];\r\n                const data = XLSX.utils.sheet_to_json(ws);\r\n                resolve(data);\r\n            };\r\n            fileReader.onerror = ((error)=>{\r\n                reject(error);\r\n            })\r\n        })\r\n\r\n        promise.then((data)=>{\r\n            setAccounts(data)\r\n            console.log(data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id='innerHero'>\r\n            <input \r\n            type=\"file\" \r\n            onChange={(e)=>{\r\n                const file = e.target.files[0];\r\n                readExcel(file);\r\n            }}\r\n            accept='.xlsx, .xls'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAE5B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAA,IAAAC,SAAA,GACHC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAArCI,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAG;IAEtB,IAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAG;MAC3C,IAAMC,UAAU,GAAG,IAAIC,UAAU,CAACN,IAAI,CAAC;MACvCK,UAAU,CAACE,iBAAiB,CAACP,IAAI,CAAC;MAElCK,UAAU,CAACG,MAAM,GAAG,UAACC,CAAC,EAAG;QACrB,IAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;QAEnC,IAAMC,EAAE,GAAGtB,IAAI,CAACuB,IAAI,CAACJ,WAAW,EAAC;UAACK,IAAI,EAAC;QAAQ,CAAC,CAAC;QAEjD,IAAMC,MAAM,GAAGH,EAAE,CAACI,UAAU,CAAC,CAAC,CAAC;QAC/B,IAAMC,EAAE,GAAGL,EAAE,CAACM,MAAM,CAACH,MAAM,CAAC;QAC5B,IAAMI,IAAI,GAAG7B,IAAI,CAAC8B,KAAK,CAACC,aAAa,CAACJ,EAAE,CAAC;QACzCf,OAAO,CAACiB,IAAI,CAAC;MACjB,CAAC;MACDf,UAAU,CAACkB,OAAO,GAAI,UAACC,KAAK,EAAG;QAC3BpB,MAAM,CAACoB,KAAK,CAAC;MACjB,CAAE;IACN,CAAC,CAAC;IAEFvB,OAAO,CAACwB,IAAI,CAAC,UAACL,IAAI,EAAG;MACjBtB,WAAW,CAACsB,IAAI,CAAC;MACjBM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,oBACI9B,KAAA,CAAAsC,aAAA;IAAKC,EAAE,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACf7C,KAAA,CAAAsC,aAAA;IACAb,IAAI,EAAC,MAAM;IACXqB,QAAQ,EAAE,SAAAA,SAAC3B,CAAC,EAAG;MACX,IAAMT,IAAI,GAAGS,CAAC,CAACE,MAAM,CAAC0B,KAAK,CAAC,CAAC,CAAC;MAC9BtC,SAAS,CAACC,IAAI,CAAC;IACnB,CAAE;IACFsC,MAAM,EAAC,aAAa;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CACA,CAAC;AAEd"},"metadata":{},"sourceType":"module"}
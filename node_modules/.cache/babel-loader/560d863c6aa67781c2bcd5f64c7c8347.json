{"ast":null,"code":"import _slicedToArray from \"E:\\\\School Web Application\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { createSelector } from '../../../utils/createSelector';\nvar gridRowsStateSelector = function gridRowsStateSelector(state) {\n  return state.rows;\n};\nexport var gridRowCountSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.totalRowCount;\n});\nexport var gridRowsLoadingSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.loading;\n});\nexport var gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.totalTopLevelRowCount;\n});\n\n// TODO rows v6: Rename\nexport var gridRowsLookupSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.dataRowIdToModelLookup;\n});\nexport var gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.dataRowIdToIdLookup;\n});\nexport var gridRowTreeSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.tree;\n});\nexport var gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.groupingName;\n});\nexport var gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.treeDepths;\n});\nexport var gridRowMaximumTreeDepthSelector = createSelector(gridRowsStateSelector, function (rows) {\n  var entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      nodeCount = _ref2[1];\n    return nodeCount > 0;\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n      depth = _ref4[0];\n    return Number(depth);\n  }).sort(function (a, b) {\n    return b - a;\n  })[0] + 1;\n});\nexport var gridDataRowIdsSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows.dataRowIds;\n});\n\n/**\n * @ignore - do not document.\n */\nexport var gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, function (rows) {\n  return rows == null ? void 0 : rows.additionalRowGroups;\n});\n\n/**\n * @ignore - do not document.\n */\nexport var gridPinnedRowsSelector = createSelector(gridAdditionalRowGroupsSelector, function (additionalRowGroups) {\n  var _rawPinnedRows$bottom, _rawPinnedRows$top;\n  var rawPinnedRows = additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows;\n  return {\n    bottom: rawPinnedRows == null ? void 0 : (_rawPinnedRows$bottom = rawPinnedRows.bottom) == null ? void 0 : _rawPinnedRows$bottom.map(function (rowEntry) {\n      var _rowEntry$model;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model = rowEntry.model) != null ? _rowEntry$model : {}\n      };\n    }),\n    top: rawPinnedRows == null ? void 0 : (_rawPinnedRows$top = rawPinnedRows.top) == null ? void 0 : _rawPinnedRows$top.map(function (rowEntry) {\n      var _rowEntry$model2;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model2 = rowEntry.model) != null ? _rowEntry$model2 : {}\n      };\n    })\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport var gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, function (pinnedRows) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  return ((pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","map":null,"metadata":{},"sourceType":"module"}
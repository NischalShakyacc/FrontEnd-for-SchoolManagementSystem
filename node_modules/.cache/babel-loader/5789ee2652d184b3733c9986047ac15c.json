{"ast":null,"code":"var _jsxFileName = \"E:\\\\School Web Application\\\\FrontEnd\\\\src\\\\Routes\\\\Admin\\\\GroupAccount.js\";\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nexport default function GroupAccount() {\n  var readExcel = function readExcel(file) {\n    /*\r\n    const promise = new Promise((resolve, reject)=>{\r\n        const fileReader = new FileReader(file);\r\n        fileReader.readAsArrayBuffer(file)\r\n          fileReader.onload = (e)=>{\r\n            const bufferArray = e.target.result;\r\n              const wb = XLSX.read(bufferArray,{type:'buffer'});\r\n              const wsname = wb.SheetNames[0];\r\n            const ws = wb.Sheets[wsname];\r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n            resolve(data);\r\n        };\r\n        fileReader.onerror = ((error)=>{\r\n            reject(error);\r\n        })\r\n    })\r\n      promise.then((data)=>{\r\n        console.log(data);\r\n    })*/\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"innerHero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: function onChange(e) {\n      var file = e.target.files[0];\n      readExcel(file);\n    },\n    accept: \".xlsx, .xls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["React","XLSX","GroupAccount","readExcel","file","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","accept"],"sources":["E:/School Web Application/FrontEnd/src/Routes/Admin/GroupAccount.js"],"sourcesContent":["import React from 'react'\r\nimport * as XLSX from 'xlsx'\r\n\r\nexport default function GroupAccount() {\r\n\r\n    const readExcel = (file)=>{\r\n        /*\r\n        const promise = new Promise((resolve, reject)=>{\r\n            const fileReader = new FileReader(file);\r\n            fileReader.readAsArrayBuffer(file)\r\n\r\n            fileReader.onload = (e)=>{\r\n                const bufferArray = e.target.result;\r\n\r\n                const wb = XLSX.read(bufferArray,{type:'buffer'});\r\n\r\n                const wsname = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wsname];\r\n                const data = XLSX.utils.sheet_to_json(ws);\r\n                resolve(data);\r\n            };\r\n            fileReader.onerror = ((error)=>{\r\n                reject(error);\r\n            })\r\n        })\r\n\r\n        promise.then((data)=>{\r\n            console.log(data);\r\n        })*/\r\n    }\r\n\r\n    return (\r\n        <div id='innerHero'>\r\n            <input \r\n            type=\"file\" \r\n            onChange={(e)=>{\r\n                const file = e.target.files[0];\r\n                readExcel(file);\r\n            }}\r\n            accept='.xlsx, .xls'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAE5B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAEnC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAG;IACtB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlBQ,CAuBH;EAED,oBACIJ,KAAA,CAAAK,aAAA;IAAKC,EAAE,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACfZ,KAAA,CAAAK,aAAA;IACAQ,IAAI,EAAC,MAAM;IACXC,QAAQ,EAAE,SAAAA,SAACC,CAAC,EAAG;MACX,IAAMX,IAAI,GAAGW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC9Bd,SAAS,CAACC,IAAI,CAAC;IACnB,CAAE;IACFc,MAAM,EAAC,aAAa;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CACA,CAAC;AAEd"},"metadata":{},"sourceType":"module"}